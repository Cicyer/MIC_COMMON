syntax = "proto3";

package BankService;
option go_package = "service/BankService;BankService";

import public "google/protobuf/timestamp.proto";

message Page {
  int64 pageNumber = 1;
  int64 pageSize = 2;
}

//查询银行账号通用接口
message ListBankAccountReq {
  int64  organizationId = 1;
  //
  string  accountType = 2;
  int64 managerId = 3;
  //指定获取哪些账户
  repeated int64  bankAccountIds = 4;
}

message ListBankAccountResp {
  repeated ListBankAccountVo list = 1;
  int64 total = 2;
  int64 pageSize = 3;
  int64 pageNumber = 4;
}

message ListBankAccountVo {
  int64   organizationId = 1;
  string  cardNo = 2;
  string  accountType = 3;
  string  bank = 4;
  string  cardOwner = 5;
  string  toibkn = 6;
  int64  frozenAmount = 7;
  string  cardStatus = 8;
  string  validStatus = 9;
  int64  bankAccountId = 10;
  google.protobuf.Timestamp createdAt = 11;
}
//创建银行账号部分
message CreateOneAccountInfoReq {
  repeated AccountInfo list = 1;
  int64 managerId = 2;
}

message AccountInfo {
  int64  mibId = 1;
  string  cardNo = 2;
  string accountType = 3;
  string bank = 4;
  int64   organizationId = 5;
  string   toibkn = 6;
  string   cardOwner = 7;
  int64  frozenAmount = 8;
}

message CreateOneAccountInfoResp {

}
//更新帐号信息
message UpdateBankAccountListReq {
  repeated AccountInfo list = 1;
}

message UpdateBankAccountListResp {

}

//账号有效性操作
message UpdateBankAccountReq {
  string  cardNo = 1;
  string  validStatus = 2;
  int64   managerId = 3;
}

message UpdateBankAccountResp {

}

message GetCompanyCreditConfigsReq {
  int64   managerId = 1;
  Page   page = 2;
  string   companyCode = 3;
  string   companyName = 4;
}

message CompanyCredit {
  int64   companyId = 1;
  string   companyName = 2;
  string   companyCode = 3;
  int64   creditUsed = 4;
  int64   creditAmount = 5;
  string   creditType = 6;
  google.protobuf.Timestamp startAt = 7;
  google.protobuf.Timestamp endAt = 8;
  int64   updaterId = 9;
  string   updaterUserName = 10;
}
message GetCompanyCreditConfigsResp {
  repeated CompanyCredit list = 1;
  int64 total = 2;
  int64 pageSize = 3;
  int64 pageNumber = 4;
}

message UpdateCompanyCreditConfigReq {
  int64   managerId = 1;
  string   companyCode = 2;
  int64   creditAmount = 3;
  string   creditType = 4;
  google.protobuf.Timestamp startAt = 5;
  google.protobuf.Timestamp endAt = 6;
}
message UpdateCompanyCreditConfigResp {

}

message GetCompanyBankAccountDetailReq {
  int64   managerId = 1;
  int64   companyId = 2;
}

message GetCompanyBankAccountDetailResp {
  int64   comId = 1;
  string   comName = 2;
  string   cardNo = 3;
  string   bank = 4;
  string   toibkn = 5;
  string   cardOwner = 6;
  string   validStatus = 7;
  int64   frozenAmount = 8;
  int64   bokbal = 9;
  int64   avabal = 10;
  int64   ovramt = 11;
  int64   stpamt = 12;
  google.protobuf.Timestamp createAt = 13;
}
message CompanyWithdrawReq {
    int64   managerId = 1;
    int64   companyId = 2;
    string   toAcc = 3;
    string   toAccName = 4;
    string   tobknm = 5;
    string   toibkn = 6;
    string   furinfo = 7;
    int64   withdrawMoney = 8;
}
message CompanyWithdrawResp {

}
message ListCompanyWithdrawReq {
    int64   managerId = 1;
    Page   page = 2;
    string   accountType = 3;
    google.protobuf.Timestamp payStartAt = 4;
    google.protobuf.Timestamp payEndAt = 5;
}
message CompanyWithdraw{
    string   outTradeNo = 1;
    int64   withdrawMoney = 2;
    string   toAcc = 3;
    string   toAccName = 4;
    string   tobknm = 5;
    string   toibkn = 6;
    string   furinfo = 7;
    google.protobuf.Timestamp payAt = 8;
    string   payType = 9;
    string   payStatus = 10;
    string   errMsg = 11;
    string   receiptUrl = 12;
    google.protobuf.Timestamp createAt = 13;
    string   userName = 14;
}

message ListCompanyWithdrawResp {
  repeated CompanyCredit list = 1;
  int64 total = 2;
  int64 pageSize = 3;
  int64 pageNumber = 4;
}
service BankService {
  //银行账号相关
  rpc ListBankAccount(ListBankAccountReq) returns(ListBankAccountResp);
  rpc CreateOneAccountInfo(CreateOneAccountInfoReq) returns(CreateOneAccountInfoResp);
  rpc UpdateBankAccount(UpdateBankAccountReq) returns(UpdateBankAccountResp);
  rpc UpdateBankAccountList(UpdateBankAccountListReq) returns(UpdateBankAccountListResp);
  //配送企业授信额度设置
  rpc GetCompanyCreditConfigs(GetCompanyCreditConfigsReq) returns (GetCompanyCreditConfigsResp);
  rpc UpdateCompanyCreditConfig(UpdateCompanyCreditConfigReq) returns (UpdateCompanyCreditConfigResp);
  //企业账户操作相关
  rpc GetCompanyBankAccountDetail(GetCompanyBankAccountDetailReq) returns (GetCompanyBankAccountDetailResp);
  rpc CompanyWithdraw(CompanyWithdrawReq) returns (CompanyWithdrawResp);
  rpc ListCompanyWithdraw(ListCompanyWithdrawReq) returns (ListCompanyWithdrawResp);

}
//支付单相关业务
service ShipmentPayOrderService {

  rpc ListBankAccount(ListBankAccountReq) returns(ListBankAccountResp);
}
//保理单相关业务
service FactoringOrderService {

  rpc ListBankAccount(ListBankAccountReq) returns(ListBankAccountResp);
}
