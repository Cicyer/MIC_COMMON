// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: Chain.proto

package ChainService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of google/protobuf/timestamp.proto.

type Timestamp = timestamppb.Timestamp

type GetCompanyHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谁在请求 按照搜索账号控制显示范围
	ManagerId    int64    `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	CompanyIds   []int64  `protobuf:"varint,2,rep,packed,name=companyIds,proto3" json:"companyIds,omitempty"`
	CompanyCodes []string `protobuf:"bytes,3,rep,name=companyCodes,proto3" json:"companyCodes,omitempty"`
}

func (x *GetCompanyHashReq) Reset() {
	*x = GetCompanyHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyHashReq) ProtoMessage() {}

func (x *GetCompanyHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyHashReq.ProtoReflect.Descriptor instead.
func (*GetCompanyHashReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{0}
}

func (x *GetCompanyHashReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetCompanyHashReq) GetCompanyIds() []int64 {
	if x != nil {
		return x.CompanyIds
	}
	return nil
}

func (x *GetCompanyHashReq) GetCompanyCodes() []string {
	if x != nil {
		return x.CompanyCodes
	}
	return nil
}

type GetCompanyHashResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*CompanyHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total      int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize   int64          `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber int64          `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
}

func (x *GetCompanyHashResp) Reset() {
	*x = GetCompanyHashResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyHashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyHashResp) ProtoMessage() {}

func (x *GetCompanyHashResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyHashResp.ProtoReflect.Descriptor instead.
func (*GetCompanyHashResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{1}
}

func (x *GetCompanyHashResp) GetList() []*CompanyHash {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetCompanyHashResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetCompanyHashResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetCompanyHashResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type CompanyHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId    int64                  `protobuf:"varint,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
	CompanyCode  string                 `protobuf:"bytes,2,opt,name=companyCode,proto3" json:"companyCode,omitempty"`
	InfoHash     string                 `protobuf:"bytes,3,opt,name=infoHash,proto3" json:"infoHash,omitempty"`
	InfoUploadAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=infoUploadAt,proto3" json:"infoUploadAt,omitempty"`
}

func (x *CompanyHash) Reset() {
	*x = CompanyHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyHash) ProtoMessage() {}

func (x *CompanyHash) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyHash.ProtoReflect.Descriptor instead.
func (*CompanyHash) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{2}
}

func (x *CompanyHash) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CompanyHash) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *CompanyHash) GetInfoHash() string {
	if x != nil {
		return x.InfoHash
	}
	return ""
}

func (x *CompanyHash) GetInfoUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.InfoUploadAt
	}
	return nil
}

type GetMiHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谁在请求 按照搜索账号控制显示范围
	ManagerId int64    `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	MiIds     []int64  `protobuf:"varint,2,rep,packed,name=miIds,proto3" json:"miIds,omitempty"`
	MiCodes   []string `protobuf:"bytes,3,rep,name=miCodes,proto3" json:"miCodes,omitempty"`
}

func (x *GetMiHashReq) Reset() {
	*x = GetMiHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiHashReq) ProtoMessage() {}

func (x *GetMiHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiHashReq.ProtoReflect.Descriptor instead.
func (*GetMiHashReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{3}
}

func (x *GetMiHashReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetMiHashReq) GetMiIds() []int64 {
	if x != nil {
		return x.MiIds
	}
	return nil
}

func (x *GetMiHashReq) GetMiCodes() []string {
	if x != nil {
		return x.MiCodes
	}
	return nil
}

type MiHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiId         int64                  `protobuf:"varint,1,opt,name=miId,proto3" json:"miId,omitempty"`
	MiCode       string                 `protobuf:"bytes,2,opt,name=miCode,proto3" json:"miCode,omitempty"`
	InfoHash     string                 `protobuf:"bytes,3,opt,name=infoHash,proto3" json:"infoHash,omitempty"`
	InfoUploadAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=infoUploadAt,proto3" json:"infoUploadAt,omitempty"`
}

func (x *MiHash) Reset() {
	*x = MiHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiHash) ProtoMessage() {}

func (x *MiHash) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiHash.ProtoReflect.Descriptor instead.
func (*MiHash) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{4}
}

func (x *MiHash) GetMiId() int64 {
	if x != nil {
		return x.MiId
	}
	return 0
}

func (x *MiHash) GetMiCode() string {
	if x != nil {
		return x.MiCode
	}
	return ""
}

func (x *MiHash) GetInfoHash() string {
	if x != nil {
		return x.InfoHash
	}
	return ""
}

func (x *MiHash) GetInfoUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.InfoUploadAt
	}
	return nil
}

type GetMiHashResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*MiHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total      int64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize   int64     `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber int64     `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
}

func (x *GetMiHashResp) Reset() {
	*x = GetMiHashResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiHashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiHashResp) ProtoMessage() {}

func (x *GetMiHashResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiHashResp.ProtoReflect.Descriptor instead.
func (*GetMiHashResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{5}
}

func (x *GetMiHashResp) GetList() []*MiHash {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetMiHashResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetMiHashResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetMiHashResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetMedicineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谁在请求 按照搜索账号控制显示范围
	ManagerId     int64    `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	MedicineIds   []int64  `protobuf:"varint,2,rep,packed,name=medicineIds,proto3" json:"medicineIds,omitempty"`
	MedicineCodes []string `protobuf:"bytes,3,rep,name=medicineCodes,proto3" json:"medicineCodes,omitempty"`
}

func (x *GetMedicineReq) Reset() {
	*x = GetMedicineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMedicineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicineReq) ProtoMessage() {}

func (x *GetMedicineReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicineReq.ProtoReflect.Descriptor instead.
func (*GetMedicineReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{6}
}

func (x *GetMedicineReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetMedicineReq) GetMedicineIds() []int64 {
	if x != nil {
		return x.MedicineIds
	}
	return nil
}

func (x *GetMedicineReq) GetMedicineCodes() []string {
	if x != nil {
		return x.MedicineCodes
	}
	return nil
}

type MedicineHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MedicineId   int64                  `protobuf:"varint,1,opt,name=medicineId,proto3" json:"medicineId,omitempty"`
	MedicineCode string                 `protobuf:"bytes,2,opt,name=medicineCode,proto3" json:"medicineCode,omitempty"`
	InfoHash     string                 `protobuf:"bytes,3,opt,name=infoHash,proto3" json:"infoHash,omitempty"`
	InfoUploadAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=infoUploadAt,proto3" json:"infoUploadAt,omitempty"`
}

func (x *MedicineHash) Reset() {
	*x = MedicineHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MedicineHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedicineHash) ProtoMessage() {}

func (x *MedicineHash) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedicineHash.ProtoReflect.Descriptor instead.
func (*MedicineHash) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{7}
}

func (x *MedicineHash) GetMedicineId() int64 {
	if x != nil {
		return x.MedicineId
	}
	return 0
}

func (x *MedicineHash) GetMedicineCode() string {
	if x != nil {
		return x.MedicineCode
	}
	return ""
}

func (x *MedicineHash) GetInfoHash() string {
	if x != nil {
		return x.InfoHash
	}
	return ""
}

func (x *MedicineHash) GetInfoUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.InfoUploadAt
	}
	return nil
}

type GetMedicineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*MedicineHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total      int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize   int64           `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber int64           `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
}

func (x *GetMedicineResp) Reset() {
	*x = GetMedicineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMedicineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicineResp) ProtoMessage() {}

func (x *GetMedicineResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicineResp.ProtoReflect.Descriptor instead.
func (*GetMedicineResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{8}
}

func (x *GetMedicineResp) GetList() []*MedicineHash {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetMedicineResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetMedicineResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetMedicineResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetContractHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谁在请求 按照搜索账号控制显示范围
	ManagerId     int64    `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	ContractIds   []int64  `protobuf:"varint,2,rep,packed,name=contractIds,proto3" json:"contractIds,omitempty"`
	ContractCodes []string `protobuf:"bytes,3,rep,name=contractCodes,proto3" json:"contractCodes,omitempty"`
}

func (x *GetContractHashReq) Reset() {
	*x = GetContractHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContractHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractHashReq) ProtoMessage() {}

func (x *GetContractHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractHashReq.ProtoReflect.Descriptor instead.
func (*GetContractHashReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{9}
}

func (x *GetContractHashReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetContractHashReq) GetContractIds() []int64 {
	if x != nil {
		return x.ContractIds
	}
	return nil
}

func (x *GetContractHashReq) GetContractCodes() []string {
	if x != nil {
		return x.ContractCodes
	}
	return nil
}

type ContractHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId   int64                  `protobuf:"varint,1,opt,name=contractId,proto3" json:"contractId,omitempty"`
	ContractCode string                 `protobuf:"bytes,2,opt,name=contractCode,proto3" json:"contractCode,omitempty"`
	InfoHash     string                 `protobuf:"bytes,3,opt,name=infoHash,proto3" json:"infoHash,omitempty"`
	InfoUploadAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=infoUploadAt,proto3" json:"infoUploadAt,omitempty"`
}

func (x *ContractHash) Reset() {
	*x = ContractHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractHash) ProtoMessage() {}

func (x *ContractHash) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractHash.ProtoReflect.Descriptor instead.
func (*ContractHash) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{10}
}

func (x *ContractHash) GetContractId() int64 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

func (x *ContractHash) GetContractCode() string {
	if x != nil {
		return x.ContractCode
	}
	return ""
}

func (x *ContractHash) GetInfoHash() string {
	if x != nil {
		return x.InfoHash
	}
	return ""
}

func (x *ContractHash) GetInfoUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.InfoUploadAt
	}
	return nil
}

type GetContractHashResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*ContractHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total      int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize   int64           `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber int64           `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
}

func (x *GetContractHashResp) Reset() {
	*x = GetContractHashResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContractHashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractHashResp) ProtoMessage() {}

func (x *GetContractHashResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractHashResp.ProtoReflect.Descriptor instead.
func (*GetContractHashResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{11}
}

func (x *GetContractHashResp) GetList() []*ContractHash {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetContractHashResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetContractHashResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetContractHashResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetContractMiHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谁在请求 按照搜索账号控制显示范围
	ManagerId     int64   `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	ContractMiIds []int64 `protobuf:"varint,2,rep,packed,name=contractMiIds,proto3" json:"contractMiIds,omitempty"`
	ContractId    int64   `protobuf:"varint,3,opt,name=contractId,proto3" json:"contractId,omitempty"`
	ContractCode  string  `protobuf:"bytes,4,opt,name=contractCode,proto3" json:"contractCode,omitempty"`
}

func (x *GetContractMiHashReq) Reset() {
	*x = GetContractMiHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContractMiHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractMiHashReq) ProtoMessage() {}

func (x *GetContractMiHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractMiHashReq.ProtoReflect.Descriptor instead.
func (*GetContractMiHashReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{12}
}

func (x *GetContractMiHashReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetContractMiHashReq) GetContractMiIds() []int64 {
	if x != nil {
		return x.ContractMiIds
	}
	return nil
}

func (x *GetContractMiHashReq) GetContractId() int64 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

func (x *GetContractMiHashReq) GetContractCode() string {
	if x != nil {
		return x.ContractCode
	}
	return ""
}

type ContractMiHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractMiId int64                  `protobuf:"varint,1,opt,name=contractMiId,proto3" json:"contractMiId,omitempty"`
	MiId         int64                  `protobuf:"varint,2,opt,name=miId,proto3" json:"miId,omitempty"`
	MiCode       string                 `protobuf:"bytes,3,opt,name=miCode,proto3" json:"miCode,omitempty"`
	InfoHash     string                 `protobuf:"bytes,4,opt,name=infoHash,proto3" json:"infoHash,omitempty"`
	InfoUploadAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=infoUploadAt,proto3" json:"infoUploadAt,omitempty"`
}

func (x *ContractMiHash) Reset() {
	*x = ContractMiHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractMiHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractMiHash) ProtoMessage() {}

func (x *ContractMiHash) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractMiHash.ProtoReflect.Descriptor instead.
func (*ContractMiHash) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{13}
}

func (x *ContractMiHash) GetContractMiId() int64 {
	if x != nil {
		return x.ContractMiId
	}
	return 0
}

func (x *ContractMiHash) GetMiId() int64 {
	if x != nil {
		return x.MiId
	}
	return 0
}

func (x *ContractMiHash) GetMiCode() string {
	if x != nil {
		return x.MiCode
	}
	return ""
}

func (x *ContractMiHash) GetInfoHash() string {
	if x != nil {
		return x.InfoHash
	}
	return ""
}

func (x *ContractMiHash) GetInfoUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.InfoUploadAt
	}
	return nil
}

type GetContractMiHashResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*ContractMiHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total      int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize   int64             `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber int64             `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
}

func (x *GetContractMiHashResp) Reset() {
	*x = GetContractMiHashResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContractMiHashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractMiHashResp) ProtoMessage() {}

func (x *GetContractMiHashResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractMiHashResp.ProtoReflect.Descriptor instead.
func (*GetContractMiHashResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{14}
}

func (x *GetContractMiHashResp) GetList() []*ContractMiHash {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetContractMiHashResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetContractMiHashResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetContractMiHashResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetConfigHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谁在请求 按照搜索账号控制显示范围
	ManagerId  int64    `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	ConfigIds  []int64  `protobuf:"varint,2,rep,packed,name=configIds,proto3" json:"configIds,omitempty"`
	ConfigKeys []string `protobuf:"bytes,3,rep,name=configKeys,proto3" json:"configKeys,omitempty"`
}

func (x *GetConfigHashReq) Reset() {
	*x = GetConfigHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigHashReq) ProtoMessage() {}

func (x *GetConfigHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigHashReq.ProtoReflect.Descriptor instead.
func (*GetConfigHashReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{15}
}

func (x *GetConfigHashReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetConfigHashReq) GetConfigIds() []int64 {
	if x != nil {
		return x.ConfigIds
	}
	return nil
}

func (x *GetConfigHashReq) GetConfigKeys() []string {
	if x != nil {
		return x.ConfigKeys
	}
	return nil
}

type ConfigHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId     int64                  `protobuf:"varint,1,opt,name=configId,proto3" json:"configId,omitempty"`
	ConfigKey    string                 `protobuf:"bytes,2,opt,name=configKey,proto3" json:"configKey,omitempty"`
	InfoHash     string                 `protobuf:"bytes,3,opt,name=infoHash,proto3" json:"infoHash,omitempty"`
	InfoUploadAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=infoUploadAt,proto3" json:"infoUploadAt,omitempty"`
}

func (x *ConfigHash) Reset() {
	*x = ConfigHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigHash) ProtoMessage() {}

func (x *ConfigHash) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigHash.ProtoReflect.Descriptor instead.
func (*ConfigHash) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigHash) GetConfigId() int64 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *ConfigHash) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *ConfigHash) GetInfoHash() string {
	if x != nil {
		return x.InfoHash
	}
	return ""
}

func (x *ConfigHash) GetInfoUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.InfoUploadAt
	}
	return nil
}

type GetConfigHashResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*ConfigHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total      int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize   int64         `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber int64         `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
}

func (x *GetConfigHashResp) Reset() {
	*x = GetConfigHashResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigHashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigHashResp) ProtoMessage() {}

func (x *GetConfigHashResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigHashResp.ProtoReflect.Descriptor instead.
func (*GetConfigHashResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{17}
}

func (x *GetConfigHashResp) GetList() []*ConfigHash {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetConfigHashResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetConfigHashResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetConfigHashResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetShipmentPlanHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谁在请求 按照搜索账号控制显示范围
	ManagerId       int64    `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	ShipmentPlanIds []int64  `protobuf:"varint,2,rep,packed,name=shipmentPlanIds,proto3" json:"shipmentPlanIds,omitempty"`
	OrderNos        []string `protobuf:"bytes,3,rep,name=orderNos,proto3" json:"orderNos,omitempty"`
	ShipmentNo      string   `protobuf:"bytes,4,opt,name=shipmentNo,proto3" json:"shipmentNo,omitempty"`
}

func (x *GetShipmentPlanHashReq) Reset() {
	*x = GetShipmentPlanHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipmentPlanHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentPlanHashReq) ProtoMessage() {}

func (x *GetShipmentPlanHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipmentPlanHashReq.ProtoReflect.Descriptor instead.
func (*GetShipmentPlanHashReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{18}
}

func (x *GetShipmentPlanHashReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetShipmentPlanHashReq) GetShipmentPlanIds() []int64 {
	if x != nil {
		return x.ShipmentPlanIds
	}
	return nil
}

func (x *GetShipmentPlanHashReq) GetOrderNos() []string {
	if x != nil {
		return x.OrderNos
	}
	return nil
}

func (x *GetShipmentPlanHashReq) GetShipmentNo() string {
	if x != nil {
		return x.ShipmentNo
	}
	return ""
}

type ShipmentPlanHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipmentPlanId          int64                  `protobuf:"varint,1,opt,name=shipmentPlanId,proto3" json:"shipmentPlanId,omitempty"`
	OrderNo                 string                 `protobuf:"bytes,2,opt,name=orderNo,proto3" json:"orderNo,omitempty"`
	InfoHash                string                 `protobuf:"bytes,3,opt,name=infoHash,proto3" json:"infoHash,omitempty"`
	InfoUploadAt            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=infoUploadAt,proto3" json:"infoUploadAt,omitempty"`
	QrCodeHash              string                 `protobuf:"bytes,5,opt,name=qrCodeHash,proto3" json:"qrCodeHash,omitempty"`
	QrCodeUploadAt          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=qrCodeUploadAt,proto3" json:"qrCodeUploadAt,omitempty"`
	ShipmentStartHash       string                 `protobuf:"bytes,7,opt,name=shipmentStartHash,proto3" json:"shipmentStartHash,omitempty"`
	ShipmentStartUploadAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=shipmentStartUploadAt,proto3" json:"shipmentStartUploadAt,omitempty"`
	ShipmentReceiveHash     string                 `protobuf:"bytes,9,opt,name=shipmentReceiveHash,proto3" json:"shipmentReceiveHash,omitempty"`
	ShipmentReceiveUploadAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=shipmentReceiveUploadAt,proto3" json:"shipmentReceiveUploadAt,omitempty"`
	ShipmentEnterHash       string                 `protobuf:"bytes,11,opt,name=shipmentEnterHash,proto3" json:"shipmentEnterHash,omitempty"`
	ShipmentEnterUploadAt   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=shipmentEnterUploadAt,proto3" json:"shipmentEnterUploadAt,omitempty"`
}

func (x *ShipmentPlanHash) Reset() {
	*x = ShipmentPlanHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipmentPlanHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipmentPlanHash) ProtoMessage() {}

func (x *ShipmentPlanHash) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipmentPlanHash.ProtoReflect.Descriptor instead.
func (*ShipmentPlanHash) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{19}
}

func (x *ShipmentPlanHash) GetShipmentPlanId() int64 {
	if x != nil {
		return x.ShipmentPlanId
	}
	return 0
}

func (x *ShipmentPlanHash) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *ShipmentPlanHash) GetInfoHash() string {
	if x != nil {
		return x.InfoHash
	}
	return ""
}

func (x *ShipmentPlanHash) GetInfoUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.InfoUploadAt
	}
	return nil
}

func (x *ShipmentPlanHash) GetQrCodeHash() string {
	if x != nil {
		return x.QrCodeHash
	}
	return ""
}

func (x *ShipmentPlanHash) GetQrCodeUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.QrCodeUploadAt
	}
	return nil
}

func (x *ShipmentPlanHash) GetShipmentStartHash() string {
	if x != nil {
		return x.ShipmentStartHash
	}
	return ""
}

func (x *ShipmentPlanHash) GetShipmentStartUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ShipmentStartUploadAt
	}
	return nil
}

func (x *ShipmentPlanHash) GetShipmentReceiveHash() string {
	if x != nil {
		return x.ShipmentReceiveHash
	}
	return ""
}

func (x *ShipmentPlanHash) GetShipmentReceiveUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ShipmentReceiveUploadAt
	}
	return nil
}

func (x *ShipmentPlanHash) GetShipmentEnterHash() string {
	if x != nil {
		return x.ShipmentEnterHash
	}
	return ""
}

func (x *ShipmentPlanHash) GetShipmentEnterUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ShipmentEnterUploadAt
	}
	return nil
}

type GetShipmentPlanHashResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*ShipmentPlanHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total      int64               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize   int64               `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber int64               `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
}

func (x *GetShipmentPlanHashResp) Reset() {
	*x = GetShipmentPlanHashResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipmentPlanHashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentPlanHashResp) ProtoMessage() {}

func (x *GetShipmentPlanHashResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipmentPlanHashResp.ProtoReflect.Descriptor instead.
func (*GetShipmentPlanHashResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{20}
}

func (x *GetShipmentPlanHashResp) GetList() []*ShipmentPlanHash {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetShipmentPlanHashResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetShipmentPlanHashResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetShipmentPlanHashResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetShipmentOrderHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谁在请求 按照搜索账号控制显示范围
	ManagerId        int64    `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	ShipmentOrderIds []int64  `protobuf:"varint,2,rep,packed,name=shipmentOrderIds,proto3" json:"shipmentOrderIds,omitempty"`
	ShipmentNos      []string `protobuf:"bytes,3,rep,name=shipmentNos,proto3" json:"shipmentNos,omitempty"`
}

func (x *GetShipmentOrderHashReq) Reset() {
	*x = GetShipmentOrderHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipmentOrderHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentOrderHashReq) ProtoMessage() {}

func (x *GetShipmentOrderHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipmentOrderHashReq.ProtoReflect.Descriptor instead.
func (*GetShipmentOrderHashReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{21}
}

func (x *GetShipmentOrderHashReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetShipmentOrderHashReq) GetShipmentOrderIds() []int64 {
	if x != nil {
		return x.ShipmentOrderIds
	}
	return nil
}

func (x *GetShipmentOrderHashReq) GetShipmentNos() []string {
	if x != nil {
		return x.ShipmentNos
	}
	return nil
}

type ShipmentOrderHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipmentOrderId         int64                  `protobuf:"varint,1,opt,name=shipmentOrderId,proto3" json:"shipmentOrderId,omitempty"`
	ShipmentNo              string                 `protobuf:"bytes,2,opt,name=shipmentNo,proto3" json:"shipmentNo,omitempty"`
	QrCodeHash              string                 `protobuf:"bytes,3,opt,name=qrCodeHash,proto3" json:"qrCodeHash,omitempty"`
	QrCodeUploadAt          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=qrCodeUploadAt,proto3" json:"qrCodeUploadAt,omitempty"`
	ShipmentStartHash       string                 `protobuf:"bytes,5,opt,name=shipmentStartHash,proto3" json:"shipmentStartHash,omitempty"`
	ShipmentStartUploadAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=shipmentStartUploadAt,proto3" json:"shipmentStartUploadAt,omitempty"`
	ShipmentReceiveHash     string                 `protobuf:"bytes,7,opt,name=shipmentReceiveHash,proto3" json:"shipmentReceiveHash,omitempty"`
	ShipmentReceiveUploadAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=shipmentReceiveUploadAt,proto3" json:"shipmentReceiveUploadAt,omitempty"`
	ShipmentEnterHash       string                 `protobuf:"bytes,9,opt,name=shipmentEnterHash,proto3" json:"shipmentEnterHash,omitempty"`
	ShipmentEnterUploadAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=shipmentEnterUploadAt,proto3" json:"shipmentEnterUploadAt,omitempty"`
}

func (x *ShipmentOrderHash) Reset() {
	*x = ShipmentOrderHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipmentOrderHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipmentOrderHash) ProtoMessage() {}

func (x *ShipmentOrderHash) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipmentOrderHash.ProtoReflect.Descriptor instead.
func (*ShipmentOrderHash) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{22}
}

func (x *ShipmentOrderHash) GetShipmentOrderId() int64 {
	if x != nil {
		return x.ShipmentOrderId
	}
	return 0
}

func (x *ShipmentOrderHash) GetShipmentNo() string {
	if x != nil {
		return x.ShipmentNo
	}
	return ""
}

func (x *ShipmentOrderHash) GetQrCodeHash() string {
	if x != nil {
		return x.QrCodeHash
	}
	return ""
}

func (x *ShipmentOrderHash) GetQrCodeUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.QrCodeUploadAt
	}
	return nil
}

func (x *ShipmentOrderHash) GetShipmentStartHash() string {
	if x != nil {
		return x.ShipmentStartHash
	}
	return ""
}

func (x *ShipmentOrderHash) GetShipmentStartUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ShipmentStartUploadAt
	}
	return nil
}

func (x *ShipmentOrderHash) GetShipmentReceiveHash() string {
	if x != nil {
		return x.ShipmentReceiveHash
	}
	return ""
}

func (x *ShipmentOrderHash) GetShipmentReceiveUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ShipmentReceiveUploadAt
	}
	return nil
}

func (x *ShipmentOrderHash) GetShipmentEnterHash() string {
	if x != nil {
		return x.ShipmentEnterHash
	}
	return ""
}

func (x *ShipmentOrderHash) GetShipmentEnterUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ShipmentEnterUploadAt
	}
	return nil
}

type GetShipmentOrderHashResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*ShipmentOrderHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total      int64                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize   int64                `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber int64                `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
}

func (x *GetShipmentOrderHashResp) Reset() {
	*x = GetShipmentOrderHashResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipmentOrderHashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentOrderHashResp) ProtoMessage() {}

func (x *GetShipmentOrderHashResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipmentOrderHashResp.ProtoReflect.Descriptor instead.
func (*GetShipmentOrderHashResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{23}
}

func (x *GetShipmentOrderHashResp) GetList() []*ShipmentOrderHash {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetShipmentOrderHashResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetShipmentOrderHashResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetShipmentOrderHashResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetShipmentPayHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谁在请求 按照搜索账号控制显示范围
	ManagerId           int64    `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	ShipmentOrderIds    []int64  `protobuf:"varint,2,rep,packed,name=shipmentOrderIds,proto3" json:"shipmentOrderIds,omitempty"`
	ShipmentPayOrderIds []int64  `protobuf:"varint,3,rep,packed,name=shipmentPayOrderIds,proto3" json:"shipmentPayOrderIds,omitempty"`
	ShipmentNos         []string `protobuf:"bytes,4,rep,name=shipmentNos,proto3" json:"shipmentNos,omitempty"`
}

func (x *GetShipmentPayHashReq) Reset() {
	*x = GetShipmentPayHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipmentPayHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentPayHashReq) ProtoMessage() {}

func (x *GetShipmentPayHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipmentPayHashReq.ProtoReflect.Descriptor instead.
func (*GetShipmentPayHashReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{24}
}

func (x *GetShipmentPayHashReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetShipmentPayHashReq) GetShipmentOrderIds() []int64 {
	if x != nil {
		return x.ShipmentOrderIds
	}
	return nil
}

func (x *GetShipmentPayHashReq) GetShipmentPayOrderIds() []int64 {
	if x != nil {
		return x.ShipmentPayOrderIds
	}
	return nil
}

func (x *GetShipmentPayHashReq) GetShipmentNos() []string {
	if x != nil {
		return x.ShipmentNos
	}
	return nil
}

type ShipmentPayHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipmentOrderId         int64                  `protobuf:"varint,1,opt,name=shipmentOrderId,proto3" json:"shipmentOrderId,omitempty"`
	ShipmentNo              string                 `protobuf:"bytes,2,opt,name=shipmentNo,proto3" json:"shipmentNo,omitempty"`
	QrCodeHash              string                 `protobuf:"bytes,3,opt,name=qrCodeHash,proto3" json:"qrCodeHash,omitempty"`
	QrCodeUploadAt          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=qrCodeUploadAt,proto3" json:"qrCodeUploadAt,omitempty"`
	ShipmentStartHash       string                 `protobuf:"bytes,5,opt,name=shipmentStartHash,proto3" json:"shipmentStartHash,omitempty"`
	ShipmentStartUploadAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=shipmentStartUploadAt,proto3" json:"shipmentStartUploadAt,omitempty"`
	ShipmentReceiveHash     string                 `protobuf:"bytes,7,opt,name=shipmentReceiveHash,proto3" json:"shipmentReceiveHash,omitempty"`
	ShipmentReceiveUploadAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=shipmentReceiveUploadAt,proto3" json:"shipmentReceiveUploadAt,omitempty"`
	ShipmentEnterHash       string                 `protobuf:"bytes,9,opt,name=shipmentEnterHash,proto3" json:"shipmentEnterHash,omitempty"`
	ShipmentEnterUploadAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=shipmentEnterUploadAt,proto3" json:"shipmentEnterUploadAt,omitempty"`
}

func (x *ShipmentPayHash) Reset() {
	*x = ShipmentPayHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipmentPayHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipmentPayHash) ProtoMessage() {}

func (x *ShipmentPayHash) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipmentPayHash.ProtoReflect.Descriptor instead.
func (*ShipmentPayHash) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{25}
}

func (x *ShipmentPayHash) GetShipmentOrderId() int64 {
	if x != nil {
		return x.ShipmentOrderId
	}
	return 0
}

func (x *ShipmentPayHash) GetShipmentNo() string {
	if x != nil {
		return x.ShipmentNo
	}
	return ""
}

func (x *ShipmentPayHash) GetQrCodeHash() string {
	if x != nil {
		return x.QrCodeHash
	}
	return ""
}

func (x *ShipmentPayHash) GetQrCodeUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.QrCodeUploadAt
	}
	return nil
}

func (x *ShipmentPayHash) GetShipmentStartHash() string {
	if x != nil {
		return x.ShipmentStartHash
	}
	return ""
}

func (x *ShipmentPayHash) GetShipmentStartUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ShipmentStartUploadAt
	}
	return nil
}

func (x *ShipmentPayHash) GetShipmentReceiveHash() string {
	if x != nil {
		return x.ShipmentReceiveHash
	}
	return ""
}

func (x *ShipmentPayHash) GetShipmentReceiveUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ShipmentReceiveUploadAt
	}
	return nil
}

func (x *ShipmentPayHash) GetShipmentEnterHash() string {
	if x != nil {
		return x.ShipmentEnterHash
	}
	return ""
}

func (x *ShipmentPayHash) GetShipmentEnterUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ShipmentEnterUploadAt
	}
	return nil
}

type GetShipmentPayHashResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*ShipmentPayHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total      int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize   int64              `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber int64              `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
}

func (x *GetShipmentPayHashResp) Reset() {
	*x = GetShipmentPayHashResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipmentPayHashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentPayHashResp) ProtoMessage() {}

func (x *GetShipmentPayHashResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipmentPayHashResp.ProtoReflect.Descriptor instead.
func (*GetShipmentPayHashResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{26}
}

func (x *GetShipmentPayHashResp) GetList() []*ShipmentPayHash {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetShipmentPayHashResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetShipmentPayHashResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetShipmentPayHashResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetShipmentFactoringHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谁在请求 按照搜索账号控制显示范围
	ManagerId         int64    `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	FactoringOrderIds []int64  `protobuf:"varint,2,rep,packed,name=factoringOrderIds,proto3" json:"factoringOrderIds,omitempty"`
	FactoringOrderNos []string `protobuf:"bytes,3,rep,name=factoringOrderNos,proto3" json:"factoringOrderNos,omitempty"`
}

func (x *GetShipmentFactoringHashReq) Reset() {
	*x = GetShipmentFactoringHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipmentFactoringHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentFactoringHashReq) ProtoMessage() {}

func (x *GetShipmentFactoringHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipmentFactoringHashReq.ProtoReflect.Descriptor instead.
func (*GetShipmentFactoringHashReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{27}
}

func (x *GetShipmentFactoringHashReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetShipmentFactoringHashReq) GetFactoringOrderIds() []int64 {
	if x != nil {
		return x.FactoringOrderIds
	}
	return nil
}

func (x *GetShipmentFactoringHashReq) GetFactoringOrderNos() []string {
	if x != nil {
		return x.FactoringOrderNos
	}
	return nil
}

type ShipmentFactoringHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FactoringOrderId int64                  `protobuf:"varint,1,opt,name=factoringOrderId,proto3" json:"factoringOrderId,omitempty"`
	FactoringOrderNo string                 `protobuf:"bytes,2,opt,name=factoringOrderNo,proto3" json:"factoringOrderNo,omitempty"`
	ApplyHash        string                 `protobuf:"bytes,3,opt,name=applyHash,proto3" json:"applyHash,omitempty"`
	ApplyUploadAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=applyUploadAt,proto3" json:"applyUploadAt,omitempty"`
	ResultHash       string                 `protobuf:"bytes,5,opt,name=resultHash,proto3" json:"resultHash,omitempty"`
	ResultUploadAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=resultUploadAt,proto3" json:"resultUploadAt,omitempty"`
	PayBackHash      string                 `protobuf:"bytes,7,opt,name=payBackHash,proto3" json:"payBackHash,omitempty"`
	PayBackUploadAt  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=payBackUploadAt,proto3" json:"payBackUploadAt,omitempty"`
}

func (x *ShipmentFactoringHash) Reset() {
	*x = ShipmentFactoringHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipmentFactoringHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipmentFactoringHash) ProtoMessage() {}

func (x *ShipmentFactoringHash) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipmentFactoringHash.ProtoReflect.Descriptor instead.
func (*ShipmentFactoringHash) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{28}
}

func (x *ShipmentFactoringHash) GetFactoringOrderId() int64 {
	if x != nil {
		return x.FactoringOrderId
	}
	return 0
}

func (x *ShipmentFactoringHash) GetFactoringOrderNo() string {
	if x != nil {
		return x.FactoringOrderNo
	}
	return ""
}

func (x *ShipmentFactoringHash) GetApplyHash() string {
	if x != nil {
		return x.ApplyHash
	}
	return ""
}

func (x *ShipmentFactoringHash) GetApplyUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApplyUploadAt
	}
	return nil
}

func (x *ShipmentFactoringHash) GetResultHash() string {
	if x != nil {
		return x.ResultHash
	}
	return ""
}

func (x *ShipmentFactoringHash) GetResultUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ResultUploadAt
	}
	return nil
}

func (x *ShipmentFactoringHash) GetPayBackHash() string {
	if x != nil {
		return x.PayBackHash
	}
	return ""
}

func (x *ShipmentFactoringHash) GetPayBackUploadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PayBackUploadAt
	}
	return nil
}

type GetShipmentFactoringHashResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*ShipmentFactoringHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total      int64                    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize   int64                    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber int64                    `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
}

func (x *GetShipmentFactoringHashResp) Reset() {
	*x = GetShipmentFactoringHashResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipmentFactoringHashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentFactoringHashResp) ProtoMessage() {}

func (x *GetShipmentFactoringHashResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipmentFactoringHashResp.ProtoReflect.Descriptor instead.
func (*GetShipmentFactoringHashResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{29}
}

func (x *GetShipmentFactoringHashResp) GetList() []*ShipmentFactoringHash {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetShipmentFactoringHashResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetShipmentFactoringHashResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetShipmentFactoringHashResp) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetHashContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagerId int64  `protobuf:"varint,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	Hash      string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetHashContentReq) Reset() {
	*x = GetHashContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHashContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHashContentReq) ProtoMessage() {}

func (x *GetHashContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHashContentReq.ProtoReflect.Descriptor instead.
func (*GetHashContentReq) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{30}
}

func (x *GetHashContentReq) GetManagerId() int64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *GetHashContentReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetHashContentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//证书内容结构，一般是一句组合的描述
	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	//向上追溯用的hash
	LastHash         string `protobuf:"bytes,2,opt,name=lastHash,proto3" json:"lastHash,omitempty"`
	UploadNode       string `protobuf:"bytes,3,opt,name=uploadNode,proto3" json:"uploadNode,omitempty"`
	UploaderName     string `protobuf:"bytes,4,opt,name=uploaderName,proto3" json:"uploaderName,omitempty"`
	UploaderRole     string `protobuf:"bytes,5,opt,name=uploaderRole,proto3" json:"uploaderRole,omitempty"`
	UploaderRoleName string `protobuf:"bytes,6,opt,name=uploaderRoleName,proto3" json:"uploaderRoleName,omitempty"`
	UploaderAccount  string `protobuf:"bytes,7,opt,name=uploaderAccount,proto3" json:"uploaderAccount,omitempty"`
	CurrentHash      string `protobuf:"bytes,8,opt,name=currentHash,proto3" json:"currentHash,omitempty"`
	//上链成功时间
	UploadSuccessAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=uploadSuccessAt,proto3" json:"uploadSuccessAt,omitempty"`
}

func (x *GetHashContentResp) Reset() {
	*x = GetHashContentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Chain_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHashContentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHashContentResp) ProtoMessage() {}

func (x *GetHashContentResp) ProtoReflect() protoreflect.Message {
	mi := &file_Chain_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHashContentResp.ProtoReflect.Descriptor instead.
func (*GetHashContentResp) Descriptor() ([]byte, []int) {
	return file_Chain_proto_rawDescGZIP(), []int{31}
}

func (x *GetHashContentResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *GetHashContentResp) GetLastHash() string {
	if x != nil {
		return x.LastHash
	}
	return ""
}

func (x *GetHashContentResp) GetUploadNode() string {
	if x != nil {
		return x.UploadNode
	}
	return ""
}

func (x *GetHashContentResp) GetUploaderName() string {
	if x != nil {
		return x.UploaderName
	}
	return ""
}

func (x *GetHashContentResp) GetUploaderRole() string {
	if x != nil {
		return x.UploaderRole
	}
	return ""
}

func (x *GetHashContentResp) GetUploaderRoleName() string {
	if x != nil {
		return x.UploaderRoleName
	}
	return ""
}

func (x *GetHashContentResp) GetUploaderAccount() string {
	if x != nil {
		return x.UploaderAccount
	}
	return ""
}

func (x *GetHashContentResp) GetCurrentHash() string {
	if x != nil {
		return x.CurrentHash
	}
	return ""
}

func (x *GetHashContentResp) GetUploadSuccessAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UploadSuccessAt
	}
	return nil
}

var File_Chain_proto protoreflect.FileDescriptor

var file_Chain_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x48,
	0x61, 0x73, 0x68, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x0b,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3e, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x22, 0x5c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x69,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x69, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x69, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x06, 0x4d, 0x69, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x6d, 0x69, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3e, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x69, 0x6e, 0x66, 0x6f,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4d, 0x69, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x69, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x76, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xae,
	0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x3e, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x22,
	0x93, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x7a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0xae, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x3e, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x9e, 0x01, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d,
	0x69, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xbc, 0x01,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x4d, 0x69, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x6d, 0x69, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3e, 0x0a, 0x0c,
	0x69, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x69, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x22, 0x9b, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6e, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x3e, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x22,
	0x93, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x9c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x22, 0x9c, 0x05, 0x0a, 0x10, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3e, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x42, 0x0a, 0x0e, 0x71, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x71, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x54, 0x0a,
	0x17, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x17, 0x73, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x73, 0x22, 0xc9, 0x04,
	0x0a, 0x11, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x42, 0x0a,
	0x0e, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0e, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x50, 0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x73, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x54, 0x0a, 0x17, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x17, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x15, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb5, 0x01,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x10, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x13,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x73, 0x22, 0xc7, 0x04, 0x0a, 0x0f, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x42, 0x0a, 0x0e, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x15, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x54, 0x0a, 0x17, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x17, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x50, 0x0a,
	0x15, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x22,
	0x9d, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x97, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x11, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x73, 0x22, 0x9b, 0x03, 0x0a, 0x15, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x40, 0x0a, 0x0d, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x42, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x44, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xea, 0x02, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x44, 0x0a, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x74, 0x32, 0xf5, 0x07, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x48,
	0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x6e, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x22, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x69, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d,
	0x69, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x24, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x25, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x26,
	0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x2e, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x1a, 0x24, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x48,
	0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x29, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x2a,
	0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x23, 0x5a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Chain_proto_rawDescOnce sync.Once
	file_Chain_proto_rawDescData = file_Chain_proto_rawDesc
)

func file_Chain_proto_rawDescGZIP() []byte {
	file_Chain_proto_rawDescOnce.Do(func() {
		file_Chain_proto_rawDescData = protoimpl.X.CompressGZIP(file_Chain_proto_rawDescData)
	})
	return file_Chain_proto_rawDescData
}

var file_Chain_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_Chain_proto_goTypes = []interface{}{
	(*GetCompanyHashReq)(nil),            // 0: ChainService.GetCompanyHashReq
	(*GetCompanyHashResp)(nil),           // 1: ChainService.GetCompanyHashResp
	(*CompanyHash)(nil),                  // 2: ChainService.CompanyHash
	(*GetMiHashReq)(nil),                 // 3: ChainService.GetMiHashReq
	(*MiHash)(nil),                       // 4: ChainService.MiHash
	(*GetMiHashResp)(nil),                // 5: ChainService.GetMiHashResp
	(*GetMedicineReq)(nil),               // 6: ChainService.GetMedicineReq
	(*MedicineHash)(nil),                 // 7: ChainService.MedicineHash
	(*GetMedicineResp)(nil),              // 8: ChainService.GetMedicineResp
	(*GetContractHashReq)(nil),           // 9: ChainService.GetContractHashReq
	(*ContractHash)(nil),                 // 10: ChainService.ContractHash
	(*GetContractHashResp)(nil),          // 11: ChainService.GetContractHashResp
	(*GetContractMiHashReq)(nil),         // 12: ChainService.GetContractMiHashReq
	(*ContractMiHash)(nil),               // 13: ChainService.ContractMiHash
	(*GetContractMiHashResp)(nil),        // 14: ChainService.GetContractMiHashResp
	(*GetConfigHashReq)(nil),             // 15: ChainService.GetConfigHashReq
	(*ConfigHash)(nil),                   // 16: ChainService.ConfigHash
	(*GetConfigHashResp)(nil),            // 17: ChainService.GetConfigHashResp
	(*GetShipmentPlanHashReq)(nil),       // 18: ChainService.GetShipmentPlanHashReq
	(*ShipmentPlanHash)(nil),             // 19: ChainService.ShipmentPlanHash
	(*GetShipmentPlanHashResp)(nil),      // 20: ChainService.GetShipmentPlanHashResp
	(*GetShipmentOrderHashReq)(nil),      // 21: ChainService.GetShipmentOrderHashReq
	(*ShipmentOrderHash)(nil),            // 22: ChainService.ShipmentOrderHash
	(*GetShipmentOrderHashResp)(nil),     // 23: ChainService.GetShipmentOrderHashResp
	(*GetShipmentPayHashReq)(nil),        // 24: ChainService.GetShipmentPayHashReq
	(*ShipmentPayHash)(nil),              // 25: ChainService.ShipmentPayHash
	(*GetShipmentPayHashResp)(nil),       // 26: ChainService.GetShipmentPayHashResp
	(*GetShipmentFactoringHashReq)(nil),  // 27: ChainService.GetShipmentFactoringHashReq
	(*ShipmentFactoringHash)(nil),        // 28: ChainService.ShipmentFactoringHash
	(*GetShipmentFactoringHashResp)(nil), // 29: ChainService.GetShipmentFactoringHashResp
	(*GetHashContentReq)(nil),            // 30: ChainService.GetHashContentReq
	(*GetHashContentResp)(nil),           // 31: ChainService.GetHashContentResp
	(*timestamppb.Timestamp)(nil),        // 32: google.protobuf.Timestamp
}
var file_Chain_proto_depIdxs = []int32{
	2,  // 0: ChainService.GetCompanyHashResp.list:type_name -> ChainService.CompanyHash
	32, // 1: ChainService.CompanyHash.infoUploadAt:type_name -> google.protobuf.Timestamp
	32, // 2: ChainService.MiHash.infoUploadAt:type_name -> google.protobuf.Timestamp
	4,  // 3: ChainService.GetMiHashResp.list:type_name -> ChainService.MiHash
	32, // 4: ChainService.MedicineHash.infoUploadAt:type_name -> google.protobuf.Timestamp
	7,  // 5: ChainService.GetMedicineResp.list:type_name -> ChainService.MedicineHash
	32, // 6: ChainService.ContractHash.infoUploadAt:type_name -> google.protobuf.Timestamp
	10, // 7: ChainService.GetContractHashResp.list:type_name -> ChainService.ContractHash
	32, // 8: ChainService.ContractMiHash.infoUploadAt:type_name -> google.protobuf.Timestamp
	13, // 9: ChainService.GetContractMiHashResp.list:type_name -> ChainService.ContractMiHash
	32, // 10: ChainService.ConfigHash.infoUploadAt:type_name -> google.protobuf.Timestamp
	16, // 11: ChainService.GetConfigHashResp.list:type_name -> ChainService.ConfigHash
	32, // 12: ChainService.ShipmentPlanHash.infoUploadAt:type_name -> google.protobuf.Timestamp
	32, // 13: ChainService.ShipmentPlanHash.qrCodeUploadAt:type_name -> google.protobuf.Timestamp
	32, // 14: ChainService.ShipmentPlanHash.shipmentStartUploadAt:type_name -> google.protobuf.Timestamp
	32, // 15: ChainService.ShipmentPlanHash.shipmentReceiveUploadAt:type_name -> google.protobuf.Timestamp
	32, // 16: ChainService.ShipmentPlanHash.shipmentEnterUploadAt:type_name -> google.protobuf.Timestamp
	19, // 17: ChainService.GetShipmentPlanHashResp.list:type_name -> ChainService.ShipmentPlanHash
	32, // 18: ChainService.ShipmentOrderHash.qrCodeUploadAt:type_name -> google.protobuf.Timestamp
	32, // 19: ChainService.ShipmentOrderHash.shipmentStartUploadAt:type_name -> google.protobuf.Timestamp
	32, // 20: ChainService.ShipmentOrderHash.shipmentReceiveUploadAt:type_name -> google.protobuf.Timestamp
	32, // 21: ChainService.ShipmentOrderHash.shipmentEnterUploadAt:type_name -> google.protobuf.Timestamp
	22, // 22: ChainService.GetShipmentOrderHashResp.list:type_name -> ChainService.ShipmentOrderHash
	32, // 23: ChainService.ShipmentPayHash.qrCodeUploadAt:type_name -> google.protobuf.Timestamp
	32, // 24: ChainService.ShipmentPayHash.shipmentStartUploadAt:type_name -> google.protobuf.Timestamp
	32, // 25: ChainService.ShipmentPayHash.shipmentReceiveUploadAt:type_name -> google.protobuf.Timestamp
	32, // 26: ChainService.ShipmentPayHash.shipmentEnterUploadAt:type_name -> google.protobuf.Timestamp
	25, // 27: ChainService.GetShipmentPayHashResp.list:type_name -> ChainService.ShipmentPayHash
	32, // 28: ChainService.ShipmentFactoringHash.applyUploadAt:type_name -> google.protobuf.Timestamp
	32, // 29: ChainService.ShipmentFactoringHash.resultUploadAt:type_name -> google.protobuf.Timestamp
	32, // 30: ChainService.ShipmentFactoringHash.payBackUploadAt:type_name -> google.protobuf.Timestamp
	28, // 31: ChainService.GetShipmentFactoringHashResp.list:type_name -> ChainService.ShipmentFactoringHash
	32, // 32: ChainService.GetHashContentResp.uploadSuccessAt:type_name -> google.protobuf.Timestamp
	0,  // 33: ChainService.ChainService.GetCompanyHash:input_type -> ChainService.GetCompanyHashReq
	3,  // 34: ChainService.ChainService.GetMiHash:input_type -> ChainService.GetMiHashReq
	6,  // 35: ChainService.ChainService.GetMedicineHash:input_type -> ChainService.GetMedicineReq
	9,  // 36: ChainService.ChainService.GetContractHash:input_type -> ChainService.GetContractHashReq
	12, // 37: ChainService.ChainService.GetContractMiHash:input_type -> ChainService.GetContractMiHashReq
	15, // 38: ChainService.ChainService.GetConfigHash:input_type -> ChainService.GetConfigHashReq
	18, // 39: ChainService.ChainService.GetShipmentPlanHash:input_type -> ChainService.GetShipmentPlanHashReq
	21, // 40: ChainService.ChainService.GetShipmentOrderHash:input_type -> ChainService.GetShipmentOrderHashReq
	24, // 41: ChainService.ChainService.GetShipmentPayHash:input_type -> ChainService.GetShipmentPayHashReq
	27, // 42: ChainService.ChainService.GetShipmentFactoringHash:input_type -> ChainService.GetShipmentFactoringHashReq
	30, // 43: ChainService.ChainService.GetHashContent:input_type -> ChainService.GetHashContentReq
	1,  // 44: ChainService.ChainService.GetCompanyHash:output_type -> ChainService.GetCompanyHashResp
	5,  // 45: ChainService.ChainService.GetMiHash:output_type -> ChainService.GetMiHashResp
	8,  // 46: ChainService.ChainService.GetMedicineHash:output_type -> ChainService.GetMedicineResp
	11, // 47: ChainService.ChainService.GetContractHash:output_type -> ChainService.GetContractHashResp
	14, // 48: ChainService.ChainService.GetContractMiHash:output_type -> ChainService.GetContractMiHashResp
	17, // 49: ChainService.ChainService.GetConfigHash:output_type -> ChainService.GetConfigHashResp
	20, // 50: ChainService.ChainService.GetShipmentPlanHash:output_type -> ChainService.GetShipmentPlanHashResp
	23, // 51: ChainService.ChainService.GetShipmentOrderHash:output_type -> ChainService.GetShipmentOrderHashResp
	26, // 52: ChainService.ChainService.GetShipmentPayHash:output_type -> ChainService.GetShipmentPayHashResp
	29, // 53: ChainService.ChainService.GetShipmentFactoringHash:output_type -> ChainService.GetShipmentFactoringHashResp
	31, // 54: ChainService.ChainService.GetHashContent:output_type -> ChainService.GetHashContentResp
	44, // [44:55] is the sub-list for method output_type
	33, // [33:44] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_Chain_proto_init() }
func file_Chain_proto_init() {
	if File_Chain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Chain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyHashResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMiHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMiHashResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMedicineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MedicineHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMedicineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContractHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContractHashResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContractMiHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractMiHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContractMiHashResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigHashResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipmentPlanHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipmentPlanHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipmentPlanHashResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipmentOrderHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipmentOrderHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipmentOrderHashResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipmentPayHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipmentPayHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipmentPayHashResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipmentFactoringHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipmentFactoringHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipmentFactoringHashResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHashContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Chain_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHashContentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Chain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Chain_proto_goTypes,
		DependencyIndexes: file_Chain_proto_depIdxs,
		MessageInfos:      file_Chain_proto_msgTypes,
	}.Build()
	File_Chain_proto = out.File
	file_Chain_proto_rawDesc = nil
	file_Chain_proto_goTypes = nil
	file_Chain_proto_depIdxs = nil
}
